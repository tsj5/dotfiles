# Set aliases for zsh and bash (only)
# should only source this for interactive shells

alias_if_exists () {
	[[ -e "$2" ]] && alias "$1"="$2"
}

# git dotfile management
# https://www.atlassian.com/git/tutorials/dotfiles
alias git-dotfile='/usr/bin/env git --git-dir="$HOME/._dotfile_repo/" --work-tree="$HOME"'

alias hgrep='history | grep'

alias conda_update='conda update -n base conda'

## PLATFORM SPECIFIC
_uname_val=$( uname -s )
case "$_uname_val" in
	Darwin*)
		# color ls; flags are different on BSD
		# use colors set by terminal's theme instead of our own
		alias ls="/bin/ls -bFG"
		alias la="/bin/ls -abFG"

		# sublime text, if installed
		_temp_path="/Applications/Sublime Text.app/Contents/SharedSupport/bin/subl"
		if ! [[ -x "$(command -v subl)" ]] && [[ -e "$_temp_path" ]]; then
			# define as a shell function, since alias can't contain spaces
			# prefer to do this instead of adding to $PATH
			eval "subl () { \"${_temp_path}\" \"\$@\"; }"
			# need to export function?
			# export -f subl
		fi

		# Mathematica, if installed
		alias_if_exists mathkernel "/Applications/Mathematica.app/Contents/MacOS/MathKernel"

		# chrome
		alias_if_exists "google-chrome" "/Applications/Google Chrome.app/Contents/MacOS/Google Chrome"

		# VS Code
		alias_if_exists "vscode" "/Applications/Visual Studio Code.app/Contents/Resources/app/bin"

		# Julia from app
		alias_if_exists "julia" "/Applications/Julia-1.7.app/Contents/Resources/julia/bin/julia"
		alias_if_exists "julia17" "/Applications/Julia-1.7.app/Contents/Resources/julia/bin/julia"
		alias_if_exists "julia16" "/Applications/Julia-1.6.app/Contents/Resources/julia/bin/julia"

		# Jupyterlab desktop
		alias_if_exists jupyter_app "/Applications/JupyterLab.app/Contents/Resources/jlab_server/bin/jupyter"	

		# macOS has no `md5sum`, so use `md5` as a fallback
		command -v md5sum > /dev/null || alias md5sum="md5"

		# macOS has no `sha1sum`, so use `shasum` as a fallback
		command -v sha1sum > /dev/null || alias sha1sum="shasum"

		unset _temp_path
		;;
	Linux*)
		;;
	*)
		echo "Unrecognized platform ${_uname_val}"
		;;
esac